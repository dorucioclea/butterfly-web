### YamlMime:ManagedReference
items:
- uid: Butterfly.Web.Channel.Channel
  commentId: T:Butterfly.Web.Channel.Channel
  id: Channel
  parent: Butterfly.Web.Channel
  children:
  - Butterfly.Web.Channel.Channel.#ctor(Butterfly.Web.Channel.IChannelConnection,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  - Butterfly.Web.Channel.Channel.Attach(IDisposable)
  - Butterfly.Web.Channel.Channel.channelKey
  - Butterfly.Web.Channel.Channel.ChannelKey
  - Butterfly.Web.Channel.Channel.connection
  - Butterfly.Web.Channel.Channel.Connection
  - Butterfly.Web.Channel.Channel.disposables
  - Butterfly.Web.Channel.Channel.Dispose
  - Butterfly.Web.Channel.Channel.logger
  - Butterfly.Web.Channel.Channel.Queue(System.Object)
  - Butterfly.Web.Channel.Channel.Queue(System.String,System.Object)
  - Butterfly.Web.Channel.Channel.vars
  - Butterfly.Web.Channel.Channel.Vars
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: Channel
  fullName: Butterfly.Web.Channel.Channel
  type: Class
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: Channel
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 15
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  summary: "\nRepresents a channel that clients can subscribe to\n"
  example: []
  syntax:
    content: 'public class Channel : IDisposable'
    content.vb: >-
      Public Class Channel
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Butterfly.Web.Channel.Channel.logger
  commentId: F:Butterfly.Web.Channel.Channel.logger
  id: logger
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: logger
  nameWithType: Channel.logger
  fullName: Butterfly.Web.Channel.Channel.logger
  type: Field
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: logger
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 16
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: protected static readonly Logger logger
    return:
      type: Logger
    content.vb: Protected Shared ReadOnly logger As Logger
  modifiers.csharp:
  - protected
  - static
  - readonly
  modifiers.vb:
  - Protected
  - Shared
  - ReadOnly
- uid: Butterfly.Web.Channel.Channel.connection
  commentId: F:Butterfly.Web.Channel.Channel.connection
  id: connection
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: connection
  nameWithType: Channel.connection
  fullName: Butterfly.Web.Channel.Channel.connection
  type: Field
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: connection
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 18
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: protected readonly IChannelConnection connection
    return:
      type: Butterfly.Web.Channel.IChannelConnection
    content.vb: Protected ReadOnly connection As IChannelConnection
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Web.Channel.Channel.channelKey
  commentId: F:Butterfly.Web.Channel.Channel.channelKey
  id: channelKey
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: channelKey
  nameWithType: Channel.channelKey
  fullName: Butterfly.Web.Channel.Channel.channelKey
  type: Field
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: channelKey
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 19
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: protected readonly string channelKey
    return:
      type: System.String
    content.vb: Protected ReadOnly channelKey As String
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Web.Channel.Channel.vars
  commentId: F:Butterfly.Web.Channel.Channel.vars
  id: vars
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: vars
  nameWithType: Channel.vars
  fullName: Butterfly.Web.Channel.Channel.vars
  type: Field
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: vars
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 20
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: protected readonly System.Collections.Generic.Dictionary<string, object> vars
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Protected ReadOnly vars As System.Collections.Generic.Dictionary(Of String, Object)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Web.Channel.Channel.#ctor(Butterfly.Web.Channel.IChannelConnection,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:Butterfly.Web.Channel.Channel.#ctor(Butterfly.Web.Channel.IChannelConnection,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: '#ctor(Butterfly.Web.Channel.IChannelConnection,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})'
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: Channel(IChannelConnection, String, System.Collections.Generic.Dictionary<String, Object>)
  nameWithType: Channel.Channel(IChannelConnection, String, System.Collections.Generic.Dictionary<String, Object>)
  fullName: Butterfly.Web.Channel.Channel.Channel(Butterfly.Web.Channel.IChannelConnection, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Constructor
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: .ctor
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 22
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: public Channel(IChannelConnection connection, string channelKey, System.Collections.Generic.Dictionary<string, object> vars)
    parameters:
    - id: connection
      type: Butterfly.Web.Channel.IChannelConnection
    - id: channelKey
      type: System.String
    - id: vars
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Sub New(connection As IChannelConnection, channelKey As String, vars As System.Collections.Generic.Dictionary(Of String, Object))
  overload: Butterfly.Web.Channel.Channel.#ctor*
  nameWithType.vb: Channel.Channel(IChannelConnection, String, System.Collections.Generic.Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Butterfly.Web.Channel.Channel.Channel(Butterfly.Web.Channel.IChannelConnection, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: Channel(IChannelConnection, String, System.Collections.Generic.Dictionary(Of String, Object))
- uid: Butterfly.Web.Channel.Channel.Connection
  commentId: P:Butterfly.Web.Channel.Channel.Connection
  id: Connection
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: Channel.Connection
  fullName: Butterfly.Web.Channel.Channel.Connection
  type: Property
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: Connection
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 28
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: public IChannelConnection Connection { get; }
    parameters: []
    return:
      type: Butterfly.Web.Channel.IChannelConnection
    content.vb: Public ReadOnly Property Connection As IChannelConnection
  overload: Butterfly.Web.Channel.Channel.Connection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Web.Channel.Channel.ChannelKey
  commentId: P:Butterfly.Web.Channel.Channel.ChannelKey
  id: ChannelKey
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: ChannelKey
  nameWithType: Channel.ChannelKey
  fullName: Butterfly.Web.Channel.Channel.ChannelKey
  type: Property
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: ChannelKey
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 30
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: public string ChannelKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ChannelKey As String
  overload: Butterfly.Web.Channel.Channel.ChannelKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Web.Channel.Channel.Vars
  commentId: P:Butterfly.Web.Channel.Channel.Vars
  id: Vars
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: Vars
  nameWithType: Channel.Vars
  fullName: Butterfly.Web.Channel.Channel.Vars
  type: Property
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: Vars
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 32
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: public System.Collections.Generic.Dictionary<string, object> Vars { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property Vars As System.Collections.Generic.Dictionary(Of String, Object)
  overload: Butterfly.Web.Channel.Channel.Vars*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.Web.Channel.Channel.disposables
  commentId: F:Butterfly.Web.Channel.Channel.disposables
  id: disposables
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: disposables
  nameWithType: Channel.disposables
  fullName: Butterfly.Web.Channel.Channel.disposables
  type: Field
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: disposables
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 34
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: protected readonly List<IDisposable> disposables
    return:
      type: List{IDisposable}
    content.vb: Protected ReadOnly disposables As List(Of IDisposable)
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Butterfly.Web.Channel.Channel.Attach(IDisposable)
  commentId: M:Butterfly.Web.Channel.Channel.Attach(IDisposable)
  id: Attach(IDisposable)
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: Attach(IDisposable)
  nameWithType: Channel.Attach(IDisposable)
  fullName: Butterfly.Web.Channel.Channel.Attach(IDisposable)
  type: Method
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: Attach
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 36
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: public void Attach(IDisposable disposable)
    parameters:
    - id: disposable
      type: IDisposable
    content.vb: Public Sub Attach(disposable As IDisposable)
  overload: Butterfly.Web.Channel.Channel.Attach*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Web.Channel.Channel.Queue(System.Object)
  commentId: M:Butterfly.Web.Channel.Channel.Queue(System.Object)
  id: Queue(System.Object)
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: Queue(Object)
  nameWithType: Channel.Queue(Object)
  fullName: Butterfly.Web.Channel.Channel.Queue(System.Object)
  type: Method
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: Queue
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 40
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: public void Queue(object data)
    parameters:
    - id: data
      type: System.Object
    content.vb: Public Sub Queue(data As Object)
  overload: Butterfly.Web.Channel.Channel.Queue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Web.Channel.Channel.Queue(System.String,System.Object)
  commentId: M:Butterfly.Web.Channel.Channel.Queue(System.String,System.Object)
  id: Queue(System.String,System.Object)
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: Queue(String, Object)
  nameWithType: Channel.Queue(String, Object)
  fullName: Butterfly.Web.Channel.Channel.Queue(System.String, System.Object)
  type: Method
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: Queue
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 44
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: public void Queue(string messageType, object data)
    parameters:
    - id: messageType
      type: System.String
    - id: data
      type: System.Object
    content.vb: Public Sub Queue(messageType As String, data As Object)
  overload: Butterfly.Web.Channel.Channel.Queue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Web.Channel.Channel.Dispose
  commentId: M:Butterfly.Web.Channel.Channel.Dispose
  id: Dispose
  parent: Butterfly.Web.Channel.Channel
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Channel.Dispose()
  fullName: Butterfly.Web.Channel.Channel.Dispose()
  type: Method
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/Channel/Channel.cs
    id: Dispose
    path: ../Butterfly.Web/Channel/Channel.cs
    startLine: 48
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.Channel
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Butterfly.Web.Channel.Channel.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Butterfly.Web.Channel
  commentId: N:Butterfly.Web.Channel
  name: Butterfly.Web.Channel
  nameWithType: Butterfly.Web.Channel
  fullName: Butterfly.Web.Channel
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Logger
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: Logger
- uid: Butterfly.Web.Channel.IChannelConnection
  commentId: T:Butterfly.Web.Channel.IChannelConnection
  parent: Butterfly.Web.Channel
  name: IChannelConnection
  nameWithType: IChannelConnection
  fullName: Butterfly.Web.Channel.IChannelConnection
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.Object}'
  definition: System.Collections.Generic.Dictionary`2
  name: System.Collections.Generic.Dictionary<String, Object>
  nameWithType: System.Collections.Generic.Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: System.Collections.Generic.Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: System.Collections.Generic.Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: System.Collections.Generic.Dictionary<, >
  nameWithType: System.Collections.Generic.Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: System.Collections.Generic.Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: System.Collections.Generic.Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: System.Collections.Generic.Dictionary
    nameWithType: System.Collections.Generic.Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.Channel.Channel.#ctor*
  commentId: Overload:Butterfly.Web.Channel.Channel.#ctor
  name: Channel
  nameWithType: Channel.Channel
  fullName: Butterfly.Web.Channel.Channel.Channel
- uid: Butterfly.Web.Channel.Channel.Connection*
  commentId: Overload:Butterfly.Web.Channel.Channel.Connection
  name: Connection
  nameWithType: Channel.Connection
  fullName: Butterfly.Web.Channel.Channel.Connection
- uid: Butterfly.Web.Channel.Channel.ChannelKey*
  commentId: Overload:Butterfly.Web.Channel.Channel.ChannelKey
  name: ChannelKey
  nameWithType: Channel.ChannelKey
  fullName: Butterfly.Web.Channel.Channel.ChannelKey
- uid: Butterfly.Web.Channel.Channel.Vars*
  commentId: Overload:Butterfly.Web.Channel.Channel.Vars
  name: Vars
  nameWithType: Channel.Vars
  fullName: Butterfly.Web.Channel.Channel.Vars
- uid: List{IDisposable}
  commentId: '!:List{IDisposable}'
  definition: List`1
  name: List<IDisposable>
  nameWithType: List<IDisposable>
  fullName: List<IDisposable>
  nameWithType.vb: List(Of IDisposable)
  fullName.vb: List(Of IDisposable)
  name.vb: List(Of IDisposable)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: IDisposable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IDisposable
    name: IDisposable
    nameWithType: IDisposable
    fullName: IDisposable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.Channel.Channel.Attach*
  commentId: Overload:Butterfly.Web.Channel.Channel.Attach
  name: Attach
  nameWithType: Channel.Attach
  fullName: Butterfly.Web.Channel.Channel.Attach
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: Butterfly.Web.Channel.Channel.Queue*
  commentId: Overload:Butterfly.Web.Channel.Channel.Queue
  name: Queue
  nameWithType: Channel.Queue
  fullName: Butterfly.Web.Channel.Channel.Queue
- uid: Butterfly.Web.Channel.Channel.Dispose*
  commentId: Overload:Butterfly.Web.Channel.Channel.Dispose
  name: Dispose
  nameWithType: Channel.Dispose
  fullName: Butterfly.Web.Channel.Channel.Dispose
shouldSkipMarkup: true
