### YamlMime:ManagedReference
items:
- uid: Butterfly.Web.WebApi.WebHandler
  commentId: T:Butterfly.Web.WebApi.WebHandler
  id: WebHandler
  parent: Butterfly.Web.WebApi
  children:
  - Butterfly.Web.WebApi.WebHandler.listener
  - Butterfly.Web.WebApi.WebHandler.method
  - Butterfly.Web.WebApi.WebHandler.path
  langs:
  - csharp
  - vb
  name: WebHandler
  nameWithType: WebHandler
  fullName: Butterfly.Web.WebApi.WebHandler
  type: Class
  source:
    remote:
      path: Butterfly.Web/WebApi/WebHandler.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: WebHandler
    path: ../Butterfly.Web/WebApi/WebHandler.cs
    startLine: 12
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.WebApi
  summary: "\nInternal class used to store references to new web handlers\n"
  example: []
  syntax:
    content: 'public class WebHandler : object'
    content.vb: >-
      Public Class WebHandler
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Butterfly.Web.WebApi.WebHandler.method
  commentId: F:Butterfly.Web.WebApi.WebHandler.method
  id: method
  parent: Butterfly.Web.WebApi.WebHandler
  langs:
  - csharp
  - vb
  name: method
  nameWithType: WebHandler.method
  fullName: Butterfly.Web.WebApi.WebHandler.method
  type: Field
  source:
    remote:
      path: Butterfly.Web/WebApi/WebHandler.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: method
    path: ../Butterfly.Web/WebApi/WebHandler.cs
    startLine: 13
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.WebApi
  syntax:
    content: public HttpMethod method
    return:
      type: HttpMethod
    content.vb: Public method As HttpMethod
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Web.WebApi.WebHandler.path
  commentId: F:Butterfly.Web.WebApi.WebHandler.path
  id: path
  parent: Butterfly.Web.WebApi.WebHandler
  langs:
  - csharp
  - vb
  name: path
  nameWithType: WebHandler.path
  fullName: Butterfly.Web.WebApi.WebHandler.path
  type: Field
  source:
    remote:
      path: Butterfly.Web/WebApi/WebHandler.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: path
    path: ../Butterfly.Web/WebApi/WebHandler.cs
    startLine: 14
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.WebApi
  syntax:
    content: public string path
    return:
      type: System.String
    content.vb: Public path As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.Web.WebApi.WebHandler.listener
  commentId: F:Butterfly.Web.WebApi.WebHandler.listener
  id: listener
  parent: Butterfly.Web.WebApi.WebHandler
  langs:
  - csharp
  - vb
  name: listener
  nameWithType: WebHandler.listener
  fullName: Butterfly.Web.WebApi.WebHandler.listener
  type: Field
  source:
    remote:
      path: Butterfly.Web/WebApi/WebHandler.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: listener
    path: ../Butterfly.Web/WebApi/WebHandler.cs
    startLine: 15
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.WebApi
  syntax:
    content: public Func<IHttpRequest, IHttpResponse, Task> listener
    return:
      type: Func{Butterfly.Web.WebApi.IHttpRequest,Butterfly.Web.WebApi.IHttpResponse,Task}
    content.vb: Public listener As Func(Of IHttpRequest, IHttpResponse, Task)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Butterfly.Web.WebApi
  commentId: N:Butterfly.Web.WebApi
  name: Butterfly.Web.WebApi
  nameWithType: Butterfly.Web.WebApi
  fullName: Butterfly.Web.WebApi
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: HttpMethod
  commentId: '!:HttpMethod'
  isExternal: true
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: HttpMethod
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Func{Butterfly.Web.WebApi.IHttpRequest,Butterfly.Web.WebApi.IHttpResponse,Task}
  commentId: '!:Func{Butterfly.Web.WebApi.IHttpRequest,Butterfly.Web.WebApi.IHttpResponse,Task}'
  definition: Func`3
  name: Func<IHttpRequest, IHttpResponse, Task>
  nameWithType: Func<IHttpRequest, IHttpResponse, Task>
  fullName: Func<Butterfly.Web.WebApi.IHttpRequest, Butterfly.Web.WebApi.IHttpResponse, Task>
  nameWithType.vb: Func(Of IHttpRequest, IHttpResponse, Task)
  fullName.vb: Func(Of Butterfly.Web.WebApi.IHttpRequest, Butterfly.Web.WebApi.IHttpResponse, Task)
  name.vb: Func(Of IHttpRequest, IHttpResponse, Task)
  spec.csharp:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Butterfly.Web.WebApi.IHttpRequest
    name: IHttpRequest
    nameWithType: IHttpRequest
    fullName: Butterfly.Web.WebApi.IHttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Butterfly.Web.WebApi.IHttpResponse
    name: IHttpResponse
    nameWithType: IHttpResponse
    fullName: Butterfly.Web.WebApi.IHttpResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Task
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Butterfly.Web.WebApi.IHttpRequest
    name: IHttpRequest
    nameWithType: IHttpRequest
    fullName: Butterfly.Web.WebApi.IHttpRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Butterfly.Web.WebApi.IHttpResponse
    name: IHttpResponse
    nameWithType: IHttpResponse
    fullName: Butterfly.Web.WebApi.IHttpResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Task
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`3
  isExternal: true
  name: Func<, , >
  nameWithType: Func<, , >
  fullName: Func<, , >
  nameWithType.vb: Func(Of , , )
  fullName.vb: Func(Of , , )
  name.vb: Func(Of , , )
  spec.csharp:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`3
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
