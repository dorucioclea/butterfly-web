### YamlMime:ManagedReference
items:
- uid: Butterfly.Web.WebApi.IHttpRequest
  commentId: T:Butterfly.Web.WebApi.IHttpRequest
  id: IHttpRequest
  parent: Butterfly.Web.WebApi
  children:
  - Butterfly.Web.WebApi.IHttpRequest.ClientIp
  - Butterfly.Web.WebApi.IHttpRequest.ParseAsMultipartStream(Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32},Action{System.String,System.String})
  - Butterfly.Web.WebApi.IHttpRequest.ReadAsync
  langs:
  - csharp
  - vb
  name: IHttpRequest
  nameWithType: IHttpRequest
  fullName: Butterfly.Web.WebApi.IHttpRequest
  type: Interface
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/WebApi/IHttpRequest.cs
    id: IHttpRequest
    path: ../Butterfly.Web/WebApi/IHttpRequest.cs
    startLine: 11
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.WebApi
  example: []
  syntax:
    content: 'public interface IHttpRequest : IWebRequest'
    content.vb: >-
      Public Interface IHttpRequest
          Inherits IWebRequest
  inheritedMembers:
  - Butterfly.Web.IWebRequest.RequestUrl
  - Butterfly.Web.IWebRequest.Headers
  - Butterfly.Web.IWebRequest.PathParams
  - Butterfly.Web.IWebRequest.QueryParams
  extensionMethods:
  - Butterfly.Web.WebApi.IHttpRequest.Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync
  - Butterfly.Web.WebApi.IHttpRequest.Butterfly.Web.IHttpRequestX.ParseAsJsonAsync``1
  - Butterfly.Web.IWebRequest.Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Butterfly.Web.WebApi.IHttpRequest.ClientIp
  commentId: P:Butterfly.Web.WebApi.IHttpRequest.ClientIp
  id: ClientIp
  parent: Butterfly.Web.WebApi.IHttpRequest
  langs:
  - csharp
  - vb
  name: ClientIp
  nameWithType: IHttpRequest.ClientIp
  fullName: Butterfly.Web.WebApi.IHttpRequest.ClientIp
  type: Property
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/WebApi/IHttpRequest.cs
    id: ClientIp
    path: ../Butterfly.Web/WebApi/IHttpRequest.cs
    startLine: 13
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.WebApi
  syntax:
    content: string ClientIp { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ClientIp As String
  overload: Butterfly.Web.WebApi.IHttpRequest.ClientIp*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Butterfly.Web.WebApi.IHttpRequest.ReadAsync
  commentId: M:Butterfly.Web.WebApi.IHttpRequest.ReadAsync
  id: ReadAsync
  parent: Butterfly.Web.WebApi.IHttpRequest
  langs:
  - csharp
  - vb
  name: ReadAsync()
  nameWithType: IHttpRequest.ReadAsync()
  fullName: Butterfly.Web.WebApi.IHttpRequest.ReadAsync()
  type: Method
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/WebApi/IHttpRequest.cs
    id: ReadAsync
    path: ../Butterfly.Web/WebApi/IHttpRequest.cs
    startLine: 17
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.WebApi
  syntax:
    content: Task<string> ReadAsync()
    return:
      type: Task{System.String}
    content.vb: Function ReadAsync As Task(Of String)
  overload: Butterfly.Web.WebApi.IHttpRequest.ReadAsync*
- uid: Butterfly.Web.WebApi.IHttpRequest.ParseAsMultipartStream(Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32},Action{System.String,System.String})
  commentId: M:Butterfly.Web.WebApi.IHttpRequest.ParseAsMultipartStream(Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32},Action{System.String,System.String})
  id: ParseAsMultipartStream(Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32},Action{System.String,System.String})
  parent: Butterfly.Web.WebApi.IHttpRequest
  langs:
  - csharp
  - vb
  name: ParseAsMultipartStream(Action<String, String, String, String, Byte[], Int32>, Action<String, String>)
  nameWithType: IHttpRequest.ParseAsMultipartStream(Action<String, String, String, String, Byte[], Int32>, Action<String, String>)
  fullName: Butterfly.Web.WebApi.IHttpRequest.ParseAsMultipartStream(Action<System.String, System.String, System.String, System.String, System.Byte[], System.Int32>, Action<System.String, System.String>)
  type: Method
  source:
    remote:
      path: C:/Users/kent1/Documents/Visual Studio 2019/Projects/Butterfly.Web/Butterfly.Web/WebApi/IHttpRequest.cs
    id: ParseAsMultipartStream
    path: ../Butterfly.Web/WebApi/IHttpRequest.cs
    startLine: 24
  assemblies:
  - Butterfly.Web
  namespace: Butterfly.Web.WebApi
  summary: "\nParses the body of a POST as a multipart stream (based on https://www.nuget.org/packages/HttpMultipartParser/)\n"
  example: []
  syntax:
    content: void ParseAsMultipartStream(Action<string, string, string, string, byte[], int> onData, Action<string, string> onParameter = null)
    parameters:
    - id: onData
      type: Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32}
      description: Callback with parameters for name, fileName, type, disposition, buffer, bytes
    - id: onParameter
      type: Action{System.String,System.String}
      description: Callback with parameters for name, data
    content.vb: Sub ParseAsMultipartStream(onData As Action(Of String, String, String, String, Byte(), Integer), onParameter As Action(Of String, String) = Nothing)
  overload: Butterfly.Web.WebApi.IHttpRequest.ParseAsMultipartStream*
  nameWithType.vb: IHttpRequest.ParseAsMultipartStream(Action(Of String, String, String, String, Byte(), Int32), Action(Of String, String))
  fullName.vb: Butterfly.Web.WebApi.IHttpRequest.ParseAsMultipartStream(Action(Of System.String, System.String, System.String, System.String, System.Byte(), System.Int32), Action(Of System.String, System.String))
  name.vb: ParseAsMultipartStream(Action(Of String, String, String, String, Byte(), Int32), Action(Of String, String))
references:
- uid: Butterfly.Web.WebApi
  commentId: N:Butterfly.Web.WebApi
  name: Butterfly.Web.WebApi
  nameWithType: Butterfly.Web.WebApi
  fullName: Butterfly.Web.WebApi
- uid: Butterfly.Web.IWebRequest.RequestUrl
  commentId: P:Butterfly.Web.IWebRequest.RequestUrl
  parent: Butterfly.Web.IWebRequest
  name: RequestUrl
  nameWithType: IWebRequest.RequestUrl
  fullName: Butterfly.Web.IWebRequest.RequestUrl
- uid: Butterfly.Web.IWebRequest.Headers
  commentId: P:Butterfly.Web.IWebRequest.Headers
  parent: Butterfly.Web.IWebRequest
  name: Headers
  nameWithType: IWebRequest.Headers
  fullName: Butterfly.Web.IWebRequest.Headers
- uid: Butterfly.Web.IWebRequest.PathParams
  commentId: P:Butterfly.Web.IWebRequest.PathParams
  parent: Butterfly.Web.IWebRequest
  name: PathParams
  nameWithType: IWebRequest.PathParams
  fullName: Butterfly.Web.IWebRequest.PathParams
- uid: Butterfly.Web.IWebRequest.QueryParams
  commentId: P:Butterfly.Web.IWebRequest.QueryParams
  parent: Butterfly.Web.IWebRequest
  name: QueryParams
  nameWithType: IWebRequest.QueryParams
  fullName: Butterfly.Web.IWebRequest.QueryParams
- uid: Butterfly.Web.WebApi.IHttpRequest.Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync
  commentId: M:Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync(Butterfly.Web.WebApi.IHttpRequest)
  parent: Butterfly.Web.IHttpRequestX
  definition: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync(Butterfly.Web.WebApi.IHttpRequest)
  name: ParseAsUrlEncodedAsync()
  nameWithType: IHttpRequestX.ParseAsUrlEncodedAsync()
  fullName: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync()
  spec.csharp:
  - uid: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync
    name: ParseAsUrlEncodedAsync
    nameWithType: IHttpRequestX.ParseAsUrlEncodedAsync
    fullName: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync
    name: ParseAsUrlEncodedAsync
    nameWithType: IHttpRequestX.ParseAsUrlEncodedAsync
    fullName: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.WebApi.IHttpRequest.Butterfly.Web.IHttpRequestX.ParseAsJsonAsync``1
  commentId: M:Butterfly.Web.IHttpRequestX.ParseAsJsonAsync``1(Butterfly.Web.WebApi.IHttpRequest)
  parent: Butterfly.Web.IHttpRequestX
  definition: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync``1(Butterfly.Web.WebApi.IHttpRequest)
  name: ParseAsJsonAsync<T>()
  nameWithType: IHttpRequestX.ParseAsJsonAsync<T>()
  fullName: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync<T>()
  nameWithType.vb: IHttpRequestX.ParseAsJsonAsync(Of T)()
  fullName.vb: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync(Of T)()
  name.vb: ParseAsJsonAsync(Of T)()
  spec.csharp:
  - uid: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync``1
    name: ParseAsJsonAsync<T>
    nameWithType: IHttpRequestX.ParseAsJsonAsync<T>
    fullName: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync``1
    name: ParseAsJsonAsync(Of T)
    nameWithType: IHttpRequestX.ParseAsJsonAsync(Of T)
    fullName: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.IWebRequest.Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue
  commentId: M:Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue(Butterfly.Web.IWebRequest)
  parent: Butterfly.Web.IWebRequestX
  definition: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue(Butterfly.Web.IWebRequest)
  name: GetAuthenticationHeaderValue()
  nameWithType: IWebRequestX.GetAuthenticationHeaderValue()
  fullName: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue()
  spec.csharp:
  - uid: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue
    name: GetAuthenticationHeaderValue
    nameWithType: IWebRequestX.GetAuthenticationHeaderValue
    fullName: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue
    name: GetAuthenticationHeaderValue
    nameWithType: IWebRequestX.GetAuthenticationHeaderValue
    fullName: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.IWebRequest
  commentId: T:Butterfly.Web.IWebRequest
  parent: Butterfly.Web
  name: IWebRequest
  nameWithType: IWebRequest
  fullName: Butterfly.Web.IWebRequest
- uid: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync(Butterfly.Web.WebApi.IHttpRequest)
  commentId: M:Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync(Butterfly.Web.WebApi.IHttpRequest)
  name: ParseAsUrlEncodedAsync(IHttpRequest)
  nameWithType: IHttpRequestX.ParseAsUrlEncodedAsync(IHttpRequest)
  fullName: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync(Butterfly.Web.WebApi.IHttpRequest)
  spec.csharp:
  - uid: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync(Butterfly.Web.WebApi.IHttpRequest)
    name: ParseAsUrlEncodedAsync
    nameWithType: IHttpRequestX.ParseAsUrlEncodedAsync
    fullName: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Butterfly.Web.WebApi.IHttpRequest
    name: IHttpRequest
    nameWithType: IHttpRequest
    fullName: Butterfly.Web.WebApi.IHttpRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync(Butterfly.Web.WebApi.IHttpRequest)
    name: ParseAsUrlEncodedAsync
    nameWithType: IHttpRequestX.ParseAsUrlEncodedAsync
    fullName: Butterfly.Web.IHttpRequestX.ParseAsUrlEncodedAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Butterfly.Web.WebApi.IHttpRequest
    name: IHttpRequest
    nameWithType: IHttpRequest
    fullName: Butterfly.Web.WebApi.IHttpRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.IHttpRequestX
  commentId: T:Butterfly.Web.IHttpRequestX
  parent: Butterfly.Web
  name: IHttpRequestX
  nameWithType: IHttpRequestX
  fullName: Butterfly.Web.IHttpRequestX
- uid: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync``1(Butterfly.Web.WebApi.IHttpRequest)
  commentId: M:Butterfly.Web.IHttpRequestX.ParseAsJsonAsync``1(Butterfly.Web.WebApi.IHttpRequest)
  name: ParseAsJsonAsync<T>(IHttpRequest)
  nameWithType: IHttpRequestX.ParseAsJsonAsync<T>(IHttpRequest)
  fullName: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync<T>(Butterfly.Web.WebApi.IHttpRequest)
  nameWithType.vb: IHttpRequestX.ParseAsJsonAsync(Of T)(IHttpRequest)
  fullName.vb: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync(Of T)(Butterfly.Web.WebApi.IHttpRequest)
  name.vb: ParseAsJsonAsync(Of T)(IHttpRequest)
  spec.csharp:
  - uid: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync``1(Butterfly.Web.WebApi.IHttpRequest)
    name: ParseAsJsonAsync<T>
    nameWithType: IHttpRequestX.ParseAsJsonAsync<T>
    fullName: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Butterfly.Web.WebApi.IHttpRequest
    name: IHttpRequest
    nameWithType: IHttpRequest
    fullName: Butterfly.Web.WebApi.IHttpRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync``1(Butterfly.Web.WebApi.IHttpRequest)
    name: ParseAsJsonAsync(Of T)
    nameWithType: IHttpRequestX.ParseAsJsonAsync(Of T)
    fullName: Butterfly.Web.IHttpRequestX.ParseAsJsonAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Butterfly.Web.WebApi.IHttpRequest
    name: IHttpRequest
    nameWithType: IHttpRequest
    fullName: Butterfly.Web.WebApi.IHttpRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue(Butterfly.Web.IWebRequest)
  commentId: M:Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue(Butterfly.Web.IWebRequest)
  name: GetAuthenticationHeaderValue(IWebRequest)
  nameWithType: IWebRequestX.GetAuthenticationHeaderValue(IWebRequest)
  fullName: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue(Butterfly.Web.IWebRequest)
  spec.csharp:
  - uid: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue(Butterfly.Web.IWebRequest)
    name: GetAuthenticationHeaderValue
    nameWithType: IWebRequestX.GetAuthenticationHeaderValue
    fullName: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Butterfly.Web.IWebRequest
    name: IWebRequest
    nameWithType: IWebRequest
    fullName: Butterfly.Web.IWebRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue(Butterfly.Web.IWebRequest)
    name: GetAuthenticationHeaderValue
    nameWithType: IWebRequestX.GetAuthenticationHeaderValue
    fullName: Butterfly.Web.IWebRequestX.GetAuthenticationHeaderValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Butterfly.Web.IWebRequest
    name: IWebRequest
    nameWithType: IWebRequest
    fullName: Butterfly.Web.IWebRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.IWebRequestX
  commentId: T:Butterfly.Web.IWebRequestX
  parent: Butterfly.Web
  name: IWebRequestX
  nameWithType: IWebRequestX
  fullName: Butterfly.Web.IWebRequestX
- uid: Butterfly.Web
  commentId: N:Butterfly.Web
  name: Butterfly.Web
  nameWithType: Butterfly.Web
  fullName: Butterfly.Web
- uid: Butterfly.Web.WebApi.IHttpRequest.ClientIp*
  commentId: Overload:Butterfly.Web.WebApi.IHttpRequest.ClientIp
  name: ClientIp
  nameWithType: IHttpRequest.ClientIp
  fullName: Butterfly.Web.WebApi.IHttpRequest.ClientIp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Butterfly.Web.WebApi.IHttpRequest.ReadAsync*
  commentId: Overload:Butterfly.Web.WebApi.IHttpRequest.ReadAsync
  name: ReadAsync
  nameWithType: IHttpRequest.ReadAsync
  fullName: Butterfly.Web.WebApi.IHttpRequest.ReadAsync
- uid: Task{System.String}
  commentId: '!:Task{System.String}'
  definition: Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.WebApi.IHttpRequest.ParseAsMultipartStream*
  commentId: Overload:Butterfly.Web.WebApi.IHttpRequest.ParseAsMultipartStream
  name: ParseAsMultipartStream
  nameWithType: IHttpRequest.ParseAsMultipartStream
  fullName: Butterfly.Web.WebApi.IHttpRequest.ParseAsMultipartStream
- uid: Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32}
  commentId: '!:Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32}'
  definition: Action`6
  name: Action<String, String, String, String, Byte[], Int32>
  nameWithType: Action<String, String, String, String, Byte[], Int32>
  fullName: Action<System.String, System.String, System.String, System.String, System.Byte[], System.Int32>
  nameWithType.vb: Action(Of String, String, String, String, Byte(), Int32)
  fullName.vb: Action(Of System.String, System.String, System.String, System.String, System.Byte(), System.Int32)
  name.vb: Action(Of String, String, String, String, Byte(), Int32)
  spec.csharp:
  - uid: Action`6
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`6
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action{System.String,System.String}
  commentId: '!:Action{System.String,System.String}'
  definition: Action`2
  name: Action<String, String>
  nameWithType: Action<String, String>
  fullName: Action<System.String, System.String>
  nameWithType.vb: Action(Of String, String)
  fullName.vb: Action(Of System.String, System.String)
  name.vb: Action(Of String, String)
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`6
  isExternal: true
  name: Action<, , , , , >
  nameWithType: Action<, , , , , >
  fullName: Action<, , , , , >
  nameWithType.vb: Action(Of , , , , , )
  fullName.vb: Action(Of , , , , , )
  name.vb: Action(Of , , , , , )
  spec.csharp:
  - uid: Action`6
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`6
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
