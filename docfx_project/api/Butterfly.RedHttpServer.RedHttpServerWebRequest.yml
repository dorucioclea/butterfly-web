### YamlMime:ManagedReference
items:
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest
  commentId: T:Butterfly.RedHttpServer.RedHttpServerWebRequest
  id: RedHttpServerWebRequest
  parent: Butterfly.RedHttpServer
  children:
  - Butterfly.RedHttpServer.RedHttpServerWebRequest.#ctor(Request)
  - Butterfly.RedHttpServer.RedHttpServerWebRequest.ClientIp
  - Butterfly.RedHttpServer.RedHttpServerWebRequest.Headers
  - Butterfly.RedHttpServer.RedHttpServerWebRequest.InputStream
  - Butterfly.RedHttpServer.RedHttpServerWebRequest.PathParams
  - Butterfly.RedHttpServer.RedHttpServerWebRequest.QueryParams
  - Butterfly.RedHttpServer.RedHttpServerWebRequest.request
  - Butterfly.RedHttpServer.RedHttpServerWebRequest.RequestUrl
  langs:
  - csharp
  - vb
  name: RedHttpServerWebRequest
  nameWithType: RedHttpServerWebRequest
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest
  type: Class
  source:
    remote:
      path: Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: RedHttpServerWebRequest
    path: ../Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
    startLine: 61
  assemblies:
  - Butterfly.Web.RedHttpServer
  namespace: Butterfly.RedHttpServer
  syntax:
    content: 'public class RedHttpServerWebRequest : BaseHttpRequest, IHttpRequest, IWebRequest'
    content.vb: >-
      Public Class RedHttpServerWebRequest
          Inherits BaseHttpRequest
          Implements IHttpRequest, IWebRequest
  inheritance:
  - System.Object
  - Butterfly.Web.WebApi.BaseHttpRequest
  implements:
  - Butterfly.Web.WebApi.IHttpRequest
  - Butterfly.Web.WebApi.IWebRequest
  inheritedMembers:
  - Butterfly.Web.WebApi.BaseHttpRequest.logger
  - Butterfly.Web.WebApi.BaseHttpRequest.ReadAsync
  - Butterfly.Web.WebApi.BaseHttpRequest.ParseAsMultipartStream(Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32},Action{System.String,System.String})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.request
  commentId: F:Butterfly.RedHttpServer.RedHttpServerWebRequest.request
  id: request
  parent: Butterfly.RedHttpServer.RedHttpServerWebRequest
  langs:
  - csharp
  - vb
  name: request
  nameWithType: RedHttpServerWebRequest.request
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.request
  type: Field
  source:
    remote:
      path: Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: request
    path: ../Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
    startLine: 63
  assemblies:
  - Butterfly.Web.RedHttpServer
  namespace: Butterfly.RedHttpServer
  syntax:
    content: public readonly Request request
    return:
      type: Request
    content.vb: Public ReadOnly request As Request
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.#ctor(Request)
  commentId: M:Butterfly.RedHttpServer.RedHttpServerWebRequest.#ctor(Request)
  id: '#ctor(Request)'
  parent: Butterfly.RedHttpServer.RedHttpServerWebRequest
  langs:
  - csharp
  - vb
  name: RedHttpServerWebRequest(Request)
  nameWithType: RedHttpServerWebRequest.RedHttpServerWebRequest(Request)
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.RedHttpServerWebRequest(Request)
  type: Constructor
  source:
    remote:
      path: Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: .ctor
    path: ../Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
    startLine: 65
  assemblies:
  - Butterfly.Web.RedHttpServer
  namespace: Butterfly.RedHttpServer
  syntax:
    content: public RedHttpServerWebRequest(Request request)
    parameters:
    - id: request
      type: Request
    content.vb: Public Sub New(request As Request)
  overload: Butterfly.RedHttpServer.RedHttpServerWebRequest.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.InputStream
  commentId: P:Butterfly.RedHttpServer.RedHttpServerWebRequest.InputStream
  id: InputStream
  parent: Butterfly.RedHttpServer.RedHttpServerWebRequest
  langs:
  - csharp
  - vb
  name: InputStream
  nameWithType: RedHttpServerWebRequest.InputStream
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.InputStream
  type: Property
  source:
    remote:
      path: Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: InputStream
    path: ../Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
    startLine: 69
  assemblies:
  - Butterfly.Web.RedHttpServer
  namespace: Butterfly.RedHttpServer
  syntax:
    content: protected override Stream InputStream { get; }
    parameters: []
    return:
      type: Stream
    content.vb: Protected Overrides ReadOnly Property InputStream As Stream
  overridden: Butterfly.Web.WebApi.BaseHttpRequest.InputStream
  overload: Butterfly.RedHttpServer.RedHttpServerWebRequest.InputStream*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.ClientIp
  commentId: P:Butterfly.RedHttpServer.RedHttpServerWebRequest.ClientIp
  id: ClientIp
  parent: Butterfly.RedHttpServer.RedHttpServerWebRequest
  langs:
  - csharp
  - vb
  name: ClientIp
  nameWithType: RedHttpServerWebRequest.ClientIp
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.ClientIp
  type: Property
  source:
    remote:
      path: Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: ClientIp
    path: ../Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
    startLine: 71
  assemblies:
  - Butterfly.Web.RedHttpServer
  namespace: Butterfly.RedHttpServer
  syntax:
    content: public override string ClientIp { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property ClientIp As String
  overridden: Butterfly.Web.WebApi.BaseHttpRequest.ClientIp
  overload: Butterfly.RedHttpServer.RedHttpServerWebRequest.ClientIp*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.RequestUrl
  commentId: P:Butterfly.RedHttpServer.RedHttpServerWebRequest.RequestUrl
  id: RequestUrl
  parent: Butterfly.RedHttpServer.RedHttpServerWebRequest
  langs:
  - csharp
  - vb
  name: RequestUrl
  nameWithType: RedHttpServerWebRequest.RequestUrl
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.RequestUrl
  type: Property
  source:
    remote:
      path: Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: RequestUrl
    path: ../Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
    startLine: 73
  assemblies:
  - Butterfly.Web.RedHttpServer
  namespace: Butterfly.RedHttpServer
  syntax:
    content: public override Uri RequestUrl { get; }
    parameters: []
    return:
      type: Uri
    content.vb: Public Overrides ReadOnly Property RequestUrl As Uri
  overridden: Butterfly.Web.WebApi.BaseHttpRequest.RequestUrl
  overload: Butterfly.RedHttpServer.RedHttpServerWebRequest.RequestUrl*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.Headers
  commentId: P:Butterfly.RedHttpServer.RedHttpServerWebRequest.Headers
  id: Headers
  parent: Butterfly.RedHttpServer.RedHttpServerWebRequest
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: RedHttpServerWebRequest.Headers
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.Headers
  type: Property
  source:
    remote:
      path: Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: Headers
    path: ../Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
    startLine: 75
  assemblies:
  - Butterfly.Web.RedHttpServer
  namespace: Butterfly.RedHttpServer
  syntax:
    content: public override Dictionary<string, string> Headers { get; }
    parameters: []
    return:
      type: Dictionary{System.String,System.String}
    content.vb: Public Overrides ReadOnly Property Headers As Dictionary(Of String, String)
  overridden: Butterfly.Web.WebApi.BaseHttpRequest.Headers
  overload: Butterfly.RedHttpServer.RedHttpServerWebRequest.Headers*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.PathParams
  commentId: P:Butterfly.RedHttpServer.RedHttpServerWebRequest.PathParams
  id: PathParams
  parent: Butterfly.RedHttpServer.RedHttpServerWebRequest
  langs:
  - csharp
  - vb
  name: PathParams
  nameWithType: RedHttpServerWebRequest.PathParams
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.PathParams
  type: Property
  source:
    remote:
      path: Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: PathParams
    path: ../Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
    startLine: 77
  assemblies:
  - Butterfly.Web.RedHttpServer
  namespace: Butterfly.RedHttpServer
  syntax:
    content: public override Dictionary<string, string> PathParams { get; }
    parameters: []
    return:
      type: Dictionary{System.String,System.String}
    content.vb: Public Overrides ReadOnly Property PathParams As Dictionary(Of String, String)
  overridden: Butterfly.Web.WebApi.BaseHttpRequest.PathParams
  overload: Butterfly.RedHttpServer.RedHttpServerWebRequest.PathParams*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.QueryParams
  commentId: P:Butterfly.RedHttpServer.RedHttpServerWebRequest.QueryParams
  id: QueryParams
  parent: Butterfly.RedHttpServer.RedHttpServerWebRequest
  langs:
  - csharp
  - vb
  name: QueryParams
  nameWithType: RedHttpServerWebRequest.QueryParams
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.QueryParams
  type: Property
  source:
    remote:
      path: Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-web.git
    id: QueryParams
    path: ../Butterfly.Web.RedHttpServer/RedHttpServerWebApi.cs
    startLine: 79
  assemblies:
  - Butterfly.Web.RedHttpServer
  namespace: Butterfly.RedHttpServer
  syntax:
    content: public override Dictionary<string, string> QueryParams { get; }
    parameters: []
    return:
      type: Dictionary{System.String,System.String}
    content.vb: Public Overrides ReadOnly Property QueryParams As Dictionary(Of String, String)
  overridden: Butterfly.Web.WebApi.BaseHttpRequest.QueryParams
  overload: Butterfly.RedHttpServer.RedHttpServerWebRequest.QueryParams*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: Butterfly.RedHttpServer
  commentId: N:Butterfly.RedHttpServer
  name: Butterfly.RedHttpServer
  nameWithType: Butterfly.RedHttpServer
  fullName: Butterfly.RedHttpServer
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Butterfly.Web.WebApi.BaseHttpRequest
  commentId: T:Butterfly.Web.WebApi.BaseHttpRequest
  parent: Butterfly.Web.WebApi
  name: BaseHttpRequest
  nameWithType: BaseHttpRequest
  fullName: Butterfly.Web.WebApi.BaseHttpRequest
- uid: Butterfly.Web.WebApi.IHttpRequest
  commentId: T:Butterfly.Web.WebApi.IHttpRequest
  parent: Butterfly.Web.WebApi
  name: IHttpRequest
  nameWithType: IHttpRequest
  fullName: Butterfly.Web.WebApi.IHttpRequest
- uid: Butterfly.Web.WebApi.IWebRequest
  commentId: T:Butterfly.Web.WebApi.IWebRequest
  parent: Butterfly.Web.WebApi
  name: IWebRequest
  nameWithType: IWebRequest
  fullName: Butterfly.Web.WebApi.IWebRequest
- uid: Butterfly.Web.WebApi.BaseHttpRequest.logger
  commentId: F:Butterfly.Web.WebApi.BaseHttpRequest.logger
  parent: Butterfly.Web.WebApi.BaseHttpRequest
  name: logger
  nameWithType: BaseHttpRequest.logger
  fullName: Butterfly.Web.WebApi.BaseHttpRequest.logger
- uid: Butterfly.Web.WebApi.BaseHttpRequest.ReadAsync
  commentId: M:Butterfly.Web.WebApi.BaseHttpRequest.ReadAsync
  parent: Butterfly.Web.WebApi.BaseHttpRequest
  name: ReadAsync()
  nameWithType: BaseHttpRequest.ReadAsync()
  fullName: Butterfly.Web.WebApi.BaseHttpRequest.ReadAsync()
  spec.csharp:
  - uid: Butterfly.Web.WebApi.BaseHttpRequest.ReadAsync
    name: ReadAsync
    nameWithType: BaseHttpRequest.ReadAsync
    fullName: Butterfly.Web.WebApi.BaseHttpRequest.ReadAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Butterfly.Web.WebApi.BaseHttpRequest.ReadAsync
    name: ReadAsync
    nameWithType: BaseHttpRequest.ReadAsync
    fullName: Butterfly.Web.WebApi.BaseHttpRequest.ReadAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.WebApi.BaseHttpRequest.ParseAsMultipartStream(Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32},Action{System.String,System.String})
  commentId: M:Butterfly.Web.WebApi.BaseHttpRequest.ParseAsMultipartStream(Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32},Action{System.String,System.String})
  parent: Butterfly.Web.WebApi.BaseHttpRequest
  isExternal: true
  name: ParseAsMultipartStream(Action<String, String, String, String, Byte[], Int32>, Action<String, String>)
  nameWithType: BaseHttpRequest.ParseAsMultipartStream(Action<String, String, String, String, Byte[], Int32>, Action<String, String>)
  fullName: Butterfly.Web.WebApi.BaseHttpRequest.ParseAsMultipartStream(Action<System.String, System.String, System.String, System.String, System.Byte[], System.Int32>, Action<System.String, System.String>)
  nameWithType.vb: BaseHttpRequest.ParseAsMultipartStream(Action(Of String, String, String, String, Byte(), Int32), Action(Of String, String))
  fullName.vb: Butterfly.Web.WebApi.BaseHttpRequest.ParseAsMultipartStream(Action(Of System.String, System.String, System.String, System.String, System.Byte(), System.Int32), Action(Of System.String, System.String))
  name.vb: ParseAsMultipartStream(Action(Of String, String, String, String, Byte(), Int32), Action(Of String, String))
  spec.csharp:
  - uid: Butterfly.Web.WebApi.BaseHttpRequest.ParseAsMultipartStream(Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32},Action{System.String,System.String})
    name: ParseAsMultipartStream
    nameWithType: BaseHttpRequest.ParseAsMultipartStream
    fullName: Butterfly.Web.WebApi.BaseHttpRequest.ParseAsMultipartStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`6
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Butterfly.Web.WebApi.BaseHttpRequest.ParseAsMultipartStream(Action{System.String,System.String,System.String,System.String,System.Byte[],System.Int32},Action{System.String,System.String})
    name: ParseAsMultipartStream
    nameWithType: BaseHttpRequest.ParseAsMultipartStream
    fullName: Butterfly.Web.WebApi.BaseHttpRequest.ParseAsMultipartStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`6
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Action`2
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.WebApi
  commentId: N:Butterfly.Web.WebApi
  name: Butterfly.Web.WebApi
  nameWithType: Butterfly.Web.WebApi
  fullName: Butterfly.Web.WebApi
- uid: Request
  isExternal: true
  name: Request
  nameWithType: Request
  fullName: Request
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.#ctor*
  commentId: Overload:Butterfly.RedHttpServer.RedHttpServerWebRequest.#ctor
  name: RedHttpServerWebRequest
  nameWithType: RedHttpServerWebRequest.RedHttpServerWebRequest
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.RedHttpServerWebRequest
- uid: Butterfly.Web.WebApi.BaseHttpRequest.InputStream
  commentId: P:Butterfly.Web.WebApi.BaseHttpRequest.InputStream
  parent: Butterfly.Web.WebApi.BaseHttpRequest
  name: InputStream
  nameWithType: BaseHttpRequest.InputStream
  fullName: Butterfly.Web.WebApi.BaseHttpRequest.InputStream
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.InputStream*
  commentId: Overload:Butterfly.RedHttpServer.RedHttpServerWebRequest.InputStream
  name: InputStream
  nameWithType: RedHttpServerWebRequest.InputStream
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.InputStream
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Butterfly.Web.WebApi.BaseHttpRequest.ClientIp
  commentId: P:Butterfly.Web.WebApi.BaseHttpRequest.ClientIp
  parent: Butterfly.Web.WebApi.BaseHttpRequest
  name: ClientIp
  nameWithType: BaseHttpRequest.ClientIp
  fullName: Butterfly.Web.WebApi.BaseHttpRequest.ClientIp
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.ClientIp*
  commentId: Overload:Butterfly.RedHttpServer.RedHttpServerWebRequest.ClientIp
  name: ClientIp
  nameWithType: RedHttpServerWebRequest.ClientIp
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.ClientIp
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Butterfly.Web.WebApi.BaseHttpRequest.RequestUrl
  commentId: P:Butterfly.Web.WebApi.BaseHttpRequest.RequestUrl
  parent: Butterfly.Web.WebApi.BaseHttpRequest
  name: RequestUrl
  nameWithType: BaseHttpRequest.RequestUrl
  fullName: Butterfly.Web.WebApi.BaseHttpRequest.RequestUrl
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.RequestUrl*
  commentId: Overload:Butterfly.RedHttpServer.RedHttpServerWebRequest.RequestUrl
  name: RequestUrl
  nameWithType: RedHttpServerWebRequest.RequestUrl
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.RequestUrl
- uid: Uri
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: Uri
- uid: Butterfly.Web.WebApi.BaseHttpRequest.Headers
  commentId: P:Butterfly.Web.WebApi.BaseHttpRequest.Headers
  parent: Butterfly.Web.WebApi.BaseHttpRequest
  name: Headers
  nameWithType: BaseHttpRequest.Headers
  fullName: Butterfly.Web.WebApi.BaseHttpRequest.Headers
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.Headers*
  commentId: Overload:Butterfly.RedHttpServer.RedHttpServerWebRequest.Headers
  name: Headers
  nameWithType: RedHttpServerWebRequest.Headers
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.Headers
- uid: Dictionary{System.String,System.String}
  commentId: '!:Dictionary{System.String,System.String}'
  definition: Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Butterfly.Web.WebApi.BaseHttpRequest.PathParams
  commentId: P:Butterfly.Web.WebApi.BaseHttpRequest.PathParams
  parent: Butterfly.Web.WebApi.BaseHttpRequest
  name: PathParams
  nameWithType: BaseHttpRequest.PathParams
  fullName: Butterfly.Web.WebApi.BaseHttpRequest.PathParams
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.PathParams*
  commentId: Overload:Butterfly.RedHttpServer.RedHttpServerWebRequest.PathParams
  name: PathParams
  nameWithType: RedHttpServerWebRequest.PathParams
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.PathParams
- uid: Butterfly.Web.WebApi.BaseHttpRequest.QueryParams
  commentId: P:Butterfly.Web.WebApi.BaseHttpRequest.QueryParams
  parent: Butterfly.Web.WebApi.BaseHttpRequest
  name: QueryParams
  nameWithType: BaseHttpRequest.QueryParams
  fullName: Butterfly.Web.WebApi.BaseHttpRequest.QueryParams
- uid: Butterfly.RedHttpServer.RedHttpServerWebRequest.QueryParams*
  commentId: Overload:Butterfly.RedHttpServer.RedHttpServerWebRequest.QueryParams
  name: QueryParams
  nameWithType: RedHttpServerWebRequest.QueryParams
  fullName: Butterfly.RedHttpServer.RedHttpServerWebRequest.QueryParams
shouldSkipMarkup: true
